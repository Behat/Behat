{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://example.com/schemas/test-report.schema.json",
    "title": "Test Report",
    "type": "object",
    "additionalProperties": false,
    "required": ["tests", "skipped", "failed", "pending", "undefined", "time", "suites"],
    "properties": {
        "tests": { "type": "integer", "minimum": 0 },
        "skipped": { "type": "integer", "minimum": 0 },
        "failed": { "type": "integer", "minimum": 0 },
        "pending": { "type": "integer", "minimum": 0 },
        "undefined": { "type": "integer", "minimum": 0 },
        "time": { "$ref": "#/$defs/TimeString" },
        "suites": {
            "type": "array",
            "items": { "$ref": "#/$defs/Suite" }
        }
    },

    "$defs": {
        "TimeString": {
            "type": "string",
            "description": "Seconds as a string with optional decimals (e.g., '0.041').",
            "pattern": "^[0-9]+(\\.[0-9]+)?$"
        },

        "FailureEntry": {
            "type": "object",
            "additionalProperties": false,
            "required": ["message"],
            "properties": {
                "message": { "type": "string" },
                "type": {
                    "type": "string",
                    "enum": ["failed", "pending", "undefined", "setup", "teardown"]
                }
            }
        },

        "Suite": {
            "type": "object",
            "title": "Suite",
            "additionalProperties": false,
            "required": ["name", "tests", "skipped", "failed", "pending", "undefined", "time", "features"],
            "properties": {
                "name": { "type": "string" },
                "tests": { "type": "integer", "minimum": 0 },
                "skipped": { "type": "integer", "minimum": 0 },
                "failed": { "type": "integer", "minimum": 0 },
                "pending": { "type": "integer", "minimum": 0 },
                "undefined": { "type": "integer", "minimum": 0 },
                "time": { "$ref": "#/$defs/TimeString" },
                "features": {
                    "type": "array",
                    "items": { "$ref": "#/$defs/Feature" }
                },
                "failures": {
                    "type": "array",
                    "description": "Optional suite-level failures (e.g., setup/teardown hook problems).",
                    "items": { "$ref": "#/$defs/FailureEntry" }
                }
            }
        },

        "Feature": {
            "type": "object",
            "title": "Feature",
            "additionalProperties": false,
            "required": ["name", "tests", "skipped", "failed", "pending", "undefined", "time", "scenarios"],
            "properties": {
                "name": { "type": "string" },
                "tests": { "type": "integer", "minimum": 0 },
                "skipped": { "type": "integer", "minimum": 0 },
                "failed": { "type": "integer", "minimum": 0 },
                "pending": { "type": "integer", "minimum": 0 },
                "undefined": { "type": "integer", "minimum": 0 },
                "time": { "$ref": "#/$defs/TimeString" },
                "scenarios": {
                    "type": "array",
                    "items": { "$ref": "#/$defs/Scenario" }
                },
                "failures": {
                    "type": "array",
                    "description": "Optional feature-level failures (e.g., AfterFeature teardown errors).",
                    "items": { "$ref": "#/$defs/FailureEntry" }
                }
            }
        },

        "Scenario": {
            "type": "object",
            "title": "Scenario",
            "additionalProperties": false,
            "required": ["name", "time", "status", "file", "line"],
            "properties": {
                "name": { "type": "string" },
                "time": { "$ref": "#/$defs/TimeString" },
                "status": {
                    "type": "string",
                    "enum": ["passed", "failed", "pending", "undefined", "skipped"]
                },
                "file": { "type": "string" },
                "line": { "type": "integer", "minimum": 1 },
                "failures": {
                    "type": "array",
                    "description": "Failure entries for the scenario.",
                    "items": { "$ref": "#/$defs/FailureEntry" }
                }
            },
            "allOf": [
                {
                    "if": { "properties": { "status": { "enum": ["failed", "pending", "undefined"] } }, "required": ["status"] },
                    "then": { "required": ["failures"] }
                }
            ]
        }
    }
}






