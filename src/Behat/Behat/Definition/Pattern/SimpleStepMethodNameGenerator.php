<?php

namespace Behat\Behat\Definition\Pattern;

use Behat\Transliterator\Transliterator;

class SimpleStepMethodNameGenerator implements StepMethodNameGenerator
{
    /**
     * @internal
     *
     * @deprecated provided only for BC, to allow the ContextSnippetGenerator to continue doing this cleanup for any
     *             steps that were generated by a third-party PatternPolicy that does not use our StepMethodNameGenerator
     */
    public static function cleanupMethodName(string $canonicalText): string
    {
        if (0 !== strlen($canonicalText)) {
            $canonicalText[0] = strtolower($canonicalText[0]);

            return $canonicalText;
        }

        return 'stepDefinition1';
    }

    public function generate(string $stepTextWithoutPlaceholders): string
    {
        $canonicalText = Transliterator::transliterate($stepTextWithoutPlaceholders, ' ');
        $canonicalText = preg_replace('/[^a-zA-Z\_\ ]/', '', $canonicalText);

        $canonicalText = str_replace(' ', '', ucwords($canonicalText));

        return self::cleanupMethodName($canonicalText);
    }
}
